/* libmenu-cache.vapi generated by vapigen, do not modify. */

namespace MenuCache {
	[CCode (cname = "MenuCache", cprefix="menu_cache_", cheader_filename = "menu-cache.h", ref_function = "menu_cache_ref", unref_function = "menu_cache_unref")]
	[Compact]
	public class Cache {
		public void* add_reload_notify (GLib.Func func);
		public uint32 get_desktop_env_flag (string desktop_env);
		public unowned CacheDir get_dir_from_path (string path);
		public unowned CacheDir get_root_dir ();
		public static void init (int flags);
		public unowned GLib.SList list_all_apps ();
		public static unowned Cache lookup (string menu_name);
		public static unowned Cache lookup_sync (string menu_name);
		public bool reload ();
		public void remove_reload_notify (void* notify_id);
	}
	[CCode (cname = "MenuCacheApp", cprefix="menu_cache_app_", cheader_filename = "menu-cache.h")]
	[Compact]
	public class CacheApp {
		public unowned string get_exec ();
		public bool get_is_visible (uint32 de_flags);
		public uint32 get_show_flags ();
		public bool get_use_sn ();
		public bool get_use_terminal ();
		public unowned string get_working_dir ();
	}
	[CCode (cname = "MenuCacheDir", cprefix="menu_cache_dir_", cheader_filename = "menu-cache.h")]
	[Compact]
	public class CacheDir {
		public unowned GLib.SList get_children ();
		public unowned string make_path ();
	}
	[CCode (cname = "MenuCacheItem", cprefix="menu_cache_item_", cheader_filename = "menu-cache.h", ref_function = "menu_cache_item_ref", unref_function = "menu_cache_item_unref")]
	[Compact]
	public class CacheItem {
		public unowned Type get_type ();
		public unowned string get_comment ();
		public unowned string get_file_basename ();
		public unowned string get_file_dirname ();
		public unowned string get_file_path ();
		public unowned string get_icon ();
		public unowned string get_id ();
		public unowned string get_name ();
		public unowned CacheDir get_parent ();
	}
	[CCode (cname="MenuCacheItemFlag", cheader_filename = "menu-cache.h", cprefix = "FLAG_", has_type_id = false)]
	public enum Item {
		USE_TERMINAL,
		USE_SN
	}
	[CCode (cname="MenuCacheShowFlag", cheader_filename = "menu-cache.h", cprefix = "SHOW_", has_type_id = false)]
	public enum Show {
		IN_LXDE,
		IN_GNOME,
		IN_KDE,
		IN_XFCE,
		IN_ROX,
		N_KNOWN_DESKTOPS
	}
	[CCode (cname="MenuCacheType", cheader_filename = "menu-cache.h", cprefix = "MENU_CACHE_TYPE_", has_type_id = false)]
	public enum Type {
		NONE,
		DIR,
		APP,
		SEP
	}
}
